plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
}

def apikeyPropertiesFile = rootProject.file("secure.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.sgg.healthykaly"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.sgg.healthykaly.CustomTestRunner"

        buildConfigField("String", "API_KEY", apikeyProperties['API_KEY'])
        buildConfigField("String", "BASE_URL", apikeyProperties['BASE_URL'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'
    // Retrofit with Moshi Converter
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    // Coil
    implementation "io.coil-kt:coil:1.1.1"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    //paging 3
    implementation("androidx.paging:paging-runtime:$paging_version")

    //room database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin annotation processing tool for roomDB (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    //Hilt dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    // alternatively - without Android dependencies for tests
    testImplementation("androidx.paging:paging-common:$paging_version")

    kaptTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test.espresso:espresso-core:$expresso_version"

    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    // ...with Java.
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")
}
kapt {
    correctErrorTypes = true
}